from prophet import Prophet
import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.metrics import mean_absolute_percentage_error

def prophet_forecasting_tab(df):
    st.header("üîÆ Prophet FX Forecasting (Probabilistic)")

    selected_currency = st.selectbox("Select Currency", df["Currency"].unique(), key="tab6_currency")
    forecast_days = st.slider("Forecast Horizon (days)", 10, 90, 30)

    df_cur = df[df["Currency"] == selected_currency].copy().sort_values("Date")
    df_cur = df_cur.rename(columns={"Date": "ds", "Close": "y"})[["ds", "y"]]
    df_cur["ds"] = pd.to_datetime(df_cur["ds"])
    df_cur = df_cur.dropna()

    st.markdown("‚öôÔ∏è Training Prophet model...")
    model = Prophet(interval_width=0.90, daily_seasonality=False)
    model.fit(df_cur)

    future = model.make_future_dataframe(periods=forecast_days)
    forecast = model.predict(future)

    # Plot
    st.subheader(f"{selected_currency} Forecast (with 90% CI)")
    fig1 = model.plot(forecast)
    st.pyplot(fig1)

    # Evaluation
    merged = pd.merge(df_cur, forecast[["ds", "yhat"]], on="ds", how="left")
    mape = mean_absolute_percentage_error(merged["y"], merged["yhat"]) * 100
    st.markdown(f"‚úÖ **Train MAPE**: `{mape:.2f}%`")

    st.markdown("### üìò Interpretation")
    st.markdown("""
    - Forecast is based on Prophet: trend + holiday + seasonality components  
    - Blue shaded area = 90% confidence interval  
    - Useful for forward-looking thresholding and deviation flagging  
    """)
